import streamlit as st
import reveal_slides as rs

# Навигация в сайдбаре

def presentation_page():
    st.sidebar.title("Навигация")
    page = st.sidebar.radio("Выберите страницу", ["Презентация"])
    if page == "Презентация":
        st.title("Презентация проекта")
        presentation_markdown = """
    # Прогнозирование отказов оборудования
## Предиктивное обслуживание промышленного оборудования

---

## Введение
### Проблема
- Незапланированные простои оборудования обходятся промышленности в миллиарды долларов
- Традиционные методы обслуживания (по расписанию или по факту поломки) неэффективны

### Решение
- Использование машинного обучения для прогнозирования отказов
- Анализ данных с датчиков оборудования для выявления ранних признаков неисправностей

---

## О датасете
- Источник: UCI Machine Learning Repository (Predictive Maintenance Dataset)
- 10 000 записей о работе промышленного оборудования
- Признаки:
  - Температура воздуха и процесса
  - Скорость вращения, крутящий момент
  - Износ инструмента
  - Тип оборудования (L, M, H)
- Целевая переменная: Факт отказа (0/1)

---

 Этапы работы
 1. Загрузка данных.
 2. Предобработка данных.
 3. Обучение модели.
 4. Оценка модели.
 5. Визуализация результатов.
5. Оценка качества моделей
6. Разработка Streamlit-приложения

---

## Реализованные модели
### Сравнение алгоритмов
- Модель                     Accuracy           ROC-AUC
- Логистическая регрессия       0.97             0.98
- Случайный лес                 0.98             0.99
- XGBoost                       0.98             0.99
- SVM                           0.96             0.97

### Ключевые метрики
- Матрица ошибок
- ROC-кривая
- Отчет классификации

---

## Streamlit-приложение
### Функционал:
1. Интерактивный анализ данных
2. Выбор и обучение модели
3. Визуализация результатов
4. Прогнозирование отказов:
   - Ввод параметров оборудования
   - Расчет вероятности отказа
   - Интерпретация результатов

### Преимущества:
- Удобный интерфейс
- Наглядная визуализация
- Возможность интеграции с промышленными системами

---

## Заключение
### Итоги
- Разработана система предиктивного обслуживания
- Достигнута точность прогнозирования >97%
- Создано удобное веб-приложение для операторов
    """

    with st.sidebar:
        st.header("Настройки презентации")
        theme = st.selectbox("Тема",
                             ["black", "white", "league", "beige", "sky", "night", "serif", "simple", "solarized"])
        height = st.number_input("Высота слайдов", value=500)
        transition = st.selectbox("Переход", ["slide", "convex", "concave", "zoom", "none"])
        plugins = st.multiselect("Плагины", ["highlight", "katex", "mathjax2", "mathjax3", "notes", "search", "zoom"],
                                 [])

    rs.slides(
        presentation_markdown,
        height=height,
        theme=theme,
        config={
            "transition": transition,
            "plugins": plugins,
        },
        markdown_props={"data-separator-vertical": "^--$"},
    )